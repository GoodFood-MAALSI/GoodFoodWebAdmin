"use client";import { useState } from "react";import { useForm } from "react-hook-form";import { zodResolver } from "@hookform/resolvers/zod";import { z } from "zod";import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/Ui/shadcn/card";import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/Ui/shadcn/form";import { Input } from "@/components/Ui/shadcn/input";import { Button } from "@/components/Ui/shadcn/button";import { toast } from "sonner";import { colorUtils, colors } from "@/app/constants";const changePasswordSchema = z.object({  newPassword: z.string().min(8, "Le nouveau mot de passe doit contenir au moins 8 caractères"),  confirmPassword: z.string().min(1, "Confirmation du mot de passe requise"),}).refine((data) => data.newPassword === data.confirmPassword, {  message: "Les mots de passe ne correspondent pas",  path: ["confirmPassword"],});type ChangePasswordForm = z.infer<typeof changePasswordSchema>;export default function ChangePassword() {  const [isLoading, setIsLoading] = useState(false);  const form = useForm<ChangePasswordForm>({    resolver: zodResolver(changePasswordSchema),    defaultValues: {      newPassword: "",      confirmPassword: "",    },  });  const onSubmit = async (data: ChangePasswordForm) => {    setIsLoading(true);    try {      const response = await fetch("/api/proxy/auth/change-password", {        method: "POST",        headers: {          "Content-Type": "application/json",        },        body: JSON.stringify({          password: data.newPassword,        }),        credentials: "include",      });      if (!response.ok) {        const errorText = await response.text();        let errorData;        try {          errorData = JSON.parse(errorText);        } catch {          throw new Error("Erreur de serveur - réponse HTML reçue");        }        throw new Error(errorData.message || "Erreur lors du changement de mot de passe");      }      const successData = await response.json();      toast.success("Mot de passe changé avec succès ! Redirection...");      setTimeout(() => {        window.location.href = "/dashboard";      }, 1000);    } catch (error: any) {      toast.error(error.message || "Erreur lors du changement de mot de passe");    } finally {      setIsLoading(false);    }  };  return (    <div className="min-h-screen flex items-center justify-center p-4" style={{      background: colorUtils.gradients.lime    }}>      <Card className="w-full max-w-md shadow-2xl border-0">        <CardHeader className="text-center space-y-2">          <CardTitle className="text-2xl font-bold" style={{ color: colorUtils.text.primary }}>            Changement de mot de passe requis          </CardTitle>          <CardDescription style={{ color: colorUtils.text.muted }}>            Vous devez changer votre mot de passe pour continuer          </CardDescription>        </CardHeader>        <CardContent>          <Form {...form}>            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">              <FormField                control={form.control}                name="newPassword"                render={({ field }) => (                  <FormItem>                    <FormLabel>Nouveau mot de passe</FormLabel>                    <FormControl>                      <Input                        type="password"                        placeholder="Votre nouveau mot de passe"                        {...field}                      />                    </FormControl>                    <FormMessage />                  </FormItem>                )}              />              <FormField                control={form.control}                name="confirmPassword"                render={({ field }) => (                  <FormItem>                    <FormLabel>Confirmer le nouveau mot de passe</FormLabel>                    <FormControl>                      <Input                        type="password"                        placeholder="Confirmez votre nouveau mot de passe"                        {...field}                      />                    </FormControl>                    <FormMessage />                  </FormItem>                )}              />              <Button                type="submit"                className="w-full text-white border-0"                style={{ background: colorUtils.gradients.primary }}                disabled={isLoading}              >                {isLoading ? "Changement en cours..." : "Changer le mot de passe"}              </Button>            </form>          </Form>        </CardContent>      </Card>    </div>  );}