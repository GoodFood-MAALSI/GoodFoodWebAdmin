import { NextRequest, NextResponse } from 'next/server'export function middleware(req: NextRequest) {  const { pathname } = req.nextUrl  if (    pathname.startsWith('/_next') ||    pathname.startsWith('/favicon') ||    pathname.includes('.') ||    pathname.startsWith('/api/')  ) {    return NextResponse.next()  }  const accessToken = req.cookies.get('accessToken')?.value  const forcePasswordChange = req.cookies.get('forcePasswordChange')?.value  const isAuthenticated = !!accessToken  const needsPasswordChange = forcePasswordChange === 'true'  if (pathname === '/') {    const response = NextResponse.next()    response.cookies.delete('accessToken')    response.cookies.delete('refreshToken')    response.cookies.delete('forcePasswordChange')    return response  }  if (pathname === '/' && !isAuthenticated) {    return NextResponse.next()  }  if (!isAuthenticated) {    return NextResponse.redirect(new URL('/', req.url))  }  if (isAuthenticated && needsPasswordChange) {    if (pathname === '/change-password') {      return NextResponse.next()    }    return NextResponse.redirect(new URL('/change-password', req.url))  }  if (isAuthenticated && !needsPasswordChange && pathname === '/change-password') {    return NextResponse.redirect(new URL('/dashboard', req.url))  }  return NextResponse.next()}export const config = {  matcher: [    '/((?!_next/static|_next/image|favicon.ico|api).*)',  ],}